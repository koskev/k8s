apiVersion: v1
kind: Service
metadata:
  name: pihole-service
  namespace: default
  labels:
    app: pihole
spec:
  selector:
    app: pihole
  ports:
    - name: dns-usb
      protocol: UDP
      port: 53
      targetPort: 53
    - name: dns-tcp
      protocol: TCP
      port: 53
      targetPort: 53
    - name: panel
      protocol: TCP
      port: 80
  type: LoadBalancer
  loadBalancerIP: 192.168.10.2
  # This somehow breaks dns for pi ap clients
  #externalTrafficPolicy: Local
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole-deployment
  namespace: default
  labels:
    app: pihole
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      serviceAccountName: external-dns
      securityContext:
        fsGroup: 65534 # For ExternalDNS to be able to read Kubernetes token files
      containers:
      - name: external-dns
        image: registry.k8s.io/external-dns/external-dns:v0.14.2
        # If authentication is disabled and/or you didn't create
        # a secret, you can remove this block.
        envFrom:
        - secretRef:
            # Change this if you gave the secret a different name
            name: pihole-secret
        args:
        - --source=service
        - --source=ingress
        # Pihole only supports A/CNAME records so there is no mechanism to track ownership.
        # You don't need to set this flag, but if you leave it unset, you will receive warning
        # logs when ExternalDNS attempts to create TXT records.
        - --registry=noop
        # IMPORTANT: If you have records that you manage manually in Pi-hole, set
        # the policy to upsert-only so they do not get deleted.
        - --policy=upsert-only
        - --provider=pihole
        # Change this to the actual address of your Pi-hole web server
        - --pihole-server=http://localhost
        resources:
          requests:
            memory: "64Mi"
      - name: pihole
        image: pihole/pihole:2024.07.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 53
          protocol: UDP
        - containerPort: 53
          protocol: TCP
        envFrom:
          - secretRef:
              name: pihole-secret
        env:
          - name: TZ
            value: "Europe/Berlin"
          - name: PIHOLE_DNS_
            value: "192.168.1.1"
          - name: DNSMASQ_LISTENING
            value: "all"
          - name: "FTLCONF_RATE_LIMIT"
            value: "0/0"
        resources:
          requests:
            memory: "128Mi"
        volumeMounts:
          - mountPath: /etc/pihole/blacklist.txt
            name: blacklist
            subPath: blacklist.txt
      volumes:
        - name: blacklist
          configMap:
            name: pihole-blacklist
      topologySpreadConstraints:
      # Prevent launching on the same host
      - maxSkew: 1
        topologyKey: "kubernetes.io/hostname"
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: pihole
